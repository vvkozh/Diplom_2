{"name": "Тест создания заказа с невалидным хэшом ингредиента", "status": "failed", "statusDetails": {"message": "AssertionError: assert 400 == 500\n +  where 400 = <Response [400]>.status_code", "trace": "self = <tests.test_create_order.TestCreateOrder object at 0x0000023017C21E10>\nlogin_user = {'accessToken': 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjY4MjZkMjMyOWVkMjgwMDAxYjVlZDMwOCIsImlhdCI6MTc0O...0bde782795b8895feb48d06035ecd0c4f6cad', 'success': True, 'user': {'email': 'test_email@burger.ru', 'name': 'Vladimir'}}, hash_ingredient = '16c0c5a71d1f82001bdaaa61'\n\n    @pytest.mark.parametrize('hash_ingredient', data.Ingredients.INVALID_HASH)\n    @allure.title('Тест создания заказа с невалидным хэшом ингредиента')\n    def test_create_order_with_invalid_hash(self, login_user, hash_ingredient):\n        access_token = {'Authorization': login_user['accessToken']}\n        payload = {'ingredients': hash_ingredient}\n        with allure.step('Создание заказа с невалидным хэшом ингредиента'):\n            response = requests.post(f'{Curls.MAIN_URL}{Curls.URL_CREATE_ORDER}', data = payload, headers=access_token)\n>       assert response.status_code == 500\nE       assert 400 == 500\nE        +  where 400 = <Response [400]>.status_code\n\ntests\\test_create_order.py:34: AssertionError"}, "steps": [{"name": "Создание заказа с невалидным хэшом ингредиента", "status": "passed", "start": 1748546766077, "stop": 1748546766305}], "parameters": [{"name": "hash_ingredient", "value": "'16c0c5a71d1f82001bdaaa61'"}], "start": 1748546766077, "stop": 1748546766305, "uuid": "bb17dcf4-e561-4d00-90ab-85fe0330698c", "historyId": "79eba76a13350be8c2e5f59e5a6bd251", "testCaseId": "7c1761ec96200ea376bf577bf0c946e2", "fullName": "tests.test_create_order.TestCreateOrder#test_create_order_with_invalid_hash", "labels": [{"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_create_order"}, {"name": "subSuite", "value": "TestCreateOrder"}, {"name": "host", "value": "DESKTOP-TPD2N8J"}, {"name": "thread", "value": "1660-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_create_order"}]}